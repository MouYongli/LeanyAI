name: GitHub Actions Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  check-dev-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Backend: Set up Python 3.10 and install dependencies with uv
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install uv
      run: pip install uv

    - name: Create uv virtual environment
      working-directory: ./api
      run: uv venv

    - name: Install backend dependencies (uv)
      working-directory: ./api
      run: uv pip install -r requirements.txt

    # (Optional) Start MinIO for integration tests
    - name: Start MinIO
      run: |
        docker run -d -p 9000:9000 -p 9001:9001 \
          -e MINIO_ROOT_USER=minioadmin \
          -e MINIO_ROOT_PASSWORD=minioadmin \
          --name minio \
          minio/minio server /data --console-address ":9001"

    - name: Wait for MinIO to be ready
      run: |
        for i in {1..10}; do
          nc -z localhost 9000 && break
          sleep 2
        done

    - name: Run backend tests
      working-directory: ./api
      run: uv run python test_minio_api.py


    # Frontend steps
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 10
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        cache-dependency-path: web/pnpm-lock.yaml

    - name: Echo PATH and pnpm version
      run: |
        echo $PATH
        which pnpm
        pnpm --version

    - name: Install dependencies
      working-directory: ./web
      run: pnpm install --frozen-lockfile

    - name: Check lint
      working-directory: ./web
      run: pnpm lint

    - name: Test development mode
      working-directory: ./web
      run: |
        # 验证开发命令可以启动
        timeout 30s pnpm dev || code=$?
        if [ $code -ne 124 ] && [ $code -ne 0 ]; then
          echo "Development mode failed to start"
          exit $code
        fi

    - name: Check build
      working-directory: ./web
      run: pnpm build